#! /bin/bash

# NOTE: At the moment, this has only been confirmed to work with PHP 7

# Grab full name of wordpress container
WORDPRESS_CONTAINER=$(docker ps | grep wordpress | awk '{print $1}')

echo ""

if [[ '' == $WORDPRESS_CONTAINER ]]; then
	echo "The WordPress Docker container must be running!"
	echo "Execute the following command:"
	echo "  npm run env:start"
	exit 0
fi

# Grab OS type
if [[ "$(uname)" == "Darwin" ]]; then
    OS_TYPE="OSX"
else
    OS_TYPE=$(expr substr $(uname -s) 1 5)
fi

xdebug_status () {
    echo 'Xdebug status'

    # If running on Windows, need to prepend with winpty :(
    if [[ ${OS_TYPE} == "MINGW" ]]; then
        winpty docker exec -it ${WORDPRESS_CONTAINER} bash -c 'php -v'
    else
        docker exec -it ${WORDPRESS_CONTAINER} bash -c 'php -v'
    fi
}

xdebug_start () {
    echo "Starting Xdebug"

    # And uncomment line with xdebug extension, thus enabling it
    ON_CMD="sed -i 's/^;zend_extension=/zend_extension=/g' \
                    /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini"

    # If running on Windows, need to prepend with winpty :(
    if [[ ${OS_TYPE} == "MINGW" ]]; then
        winpty docker exec -it ${WORDPRESS_CONTAINER} bash -c "${ON_CMD}"
    else
        docker exec -it ${WORDPRESS_CONTAINER} bash -c "${ON_CMD}"
    fi

    echo "Xdebug Started"
    container_restart
}

xdebug_stop () {
    echo "Stopping Xdebug"

    # Comment out xdebug extension line
    OFF_CMD="sed -i 's/^zend_extension=/;zend_extension=/g' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini"

    # If running on Windows, need to prepend with winpty :(
    if [[ ${OS_TYPE} == "MINGW" ]]; then
        # This is the equivalent of:
        # winpty docker exec -it kurly_finance_php_wordpress_1 bash -c 'bla bla bla'
        # Thanks to @michaelarnauts at https://github.com/docker/compose/issues/593
        winpty docker exec -it ${WORDPRESS_CONTAINER} bash -c "${OFF_CMD}"
    else
        docker exec -it ${WORDPRESS_CONTAINER} bash -c "${OFF_CMD}"
    fi

    echo "Xdebug Stopped"
    container_restart
}

container_restart () {
    echo "Restarting container"

    # docker-compose restart wordpress
    docker restart ${WORDPRESS_CONTAINER}

    xdebug_status
}

case $@ in
    stop|STOP)
        xdebug_stop
        ;;
    start|START)
        xdebug_start
        ;;
    status|STATUS)
        xdebug_status
        ;;
    *)
        echo "Usage:"
        echo "  bin/xdebug stop|start|status"
esac

exit 0
